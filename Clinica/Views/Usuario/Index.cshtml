@model List<Clinica.Models.Usuario>
@{
    ViewBag.Title = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var roles = ViewBag.Roles as List<Clinica.Models.RolUsuario>;
    var especialidades = (new Clinica.Models.ClinicaContext()).Especialidades.ToList();
    var filtroDocumento = ViewBag.FiltroDocumento as string;
}

<div class="container-fluid mt-4">
    <h2>Usuarios</h2>
    <div class="card mt-3">
        <div class="card-header">
            <i class="fa fa-list"></i> Lista de usuarios
        </div>
        <div class="card-body">
            <!-- Botón para abrir modal Crear -->
            <button class="btn btn-outline-success mb-3" data-bs-toggle="modal" data-bs-target="#usuarioModal">
                Nuevo Usuario
            </button>
            <!-- Filtro por Nro Documento -->
            <div class="row mb-2">
                <div class="col-md-6">
                    @using (Html.BeginForm("Index", "Usuario", FormMethod.Get, new { @class = "d-flex" }))
                    {
                        <input type="text" name="filtroDocumento" class="form-control me-2" placeholder="Filtrar por Nro Documento..." value="@filtroDocumento" />
                        <button type="submit" class="btn btn-primary">Buscar</button>
                        <a href="@Url.Action("Index", "Usuario")" class="btn btn-outline-secondary ms-2">Limpiar</a>

                    }

                </div>
            </div>
            <!-- Mensajes de error y éxito -->
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger text-center">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success text-center">@TempData["Success"]</div>
            }

            <table id="usuariosTable" class="table table-bordered table-hover align-middle">
                <thead>
                    <tr>
                        <th>Nro Documento</th>
                        <th>Nombres</th>
                        <th>Apellidos</th>
                        <th>Correo</th>
                        <th>Rol</th>
                        <th>Fecha Creacion</th>
                        <th>Acción</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Model)
                    {
                        <tr>
                            <td>@usuario.NumeroDocumentoIdentidad</td>
                            <td>@usuario.Nombre</td>
                            <td>@usuario.Apellido</td>
                            <td>@usuario.Correo</td>
                            <td>@(usuario.Rol != null ? usuario.Rol.Nombre : "")</td>
                            <td>@(usuario.FechaCreacion.HasValue ? usuario.FechaCreacion.Value.ToString("dd/MM/yyyy") : "")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button"
                                            class="btn btn-info btn-sm btn-ver"
                                            data-id="@usuario.IdUsuario"
                                            data-doc="@usuario.NumeroDocumentoIdentidad"
                                            data-nombre="@usuario.Nombre"
                                            data-apellido="@usuario.Apellido"
                                            data-correo="@usuario.Correo"
                                            data-rol="@usuario.IdRolUsuario"
                                            title="Ver usuario">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    @if ((int?)Session["IdUsuario"] != usuario.IdUsuario)
                                    {
                                        <button type="button"
                                                class="btn btn-warning btn-sm btn-editar"
                                                data-id="@usuario.IdUsuario"
                                                data-doc="@usuario.NumeroDocumentoIdentidad"
                                                data-nombre="@usuario.Nombre"
                                                data-apellido="@usuario.Apellido"
                                                data-correo="@usuario.Correo"
                                                data-rol="@usuario.IdRolUsuario"
                                                title="Editar usuario">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                        <button type="button"
                                                class="btn btn-danger btn-sm btn-eliminar"
                                                data-id="@usuario.IdUsuario"
                                                data-nombre="@usuario.Nombre"
                                                data-apellido="@usuario.Apellido"
                                                title="Eliminar usuario">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal Crear Usuario -->
<div class="modal fade" id="usuarioModal" tabindex="-1" aria-labelledby="usuarioModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm("Create", "Usuario", FormMethod.Post, new { id = "formCrearUsuario", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="usuarioModalLabel">Nuevo Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="NumeroDocumentoIdentidad" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().NumeroDocumentoIdentidad): <span class="text-danger">*</span></label>
                            @Html.TextBox("NumeroDocumentoIdentidad", null, new { @class = "form-control", id = "NumeroDocumentoIdentidad" })
                            @Html.ValidationMessage("NumeroDocumentoIdentidad", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label for="Nombre" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Nombre): <span class="text-danger">*</span></label>
                            @Html.TextBox("Nombre", null, new { @class = "form-control", id = "Nombre" })
                            @Html.ValidationMessage("Nombre", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="Apellido" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Apellido): <span class="text-danger">*</span></label>
                            @Html.TextBox("Apellido", null, new { @class = "form-control", id = "Apellido" })
                            @Html.ValidationMessage("Apellido", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label for="Correo" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Correo): <span class="text-danger">*</span></label>
                            @Html.TextBox("Correo", null, new { @class = "form-control", type = "email", id = "Correo" })
                            @Html.ValidationMessage("Correo", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="IdRolUsuario" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().IdRolUsuario): <span class="text-danger">*</span></label>
                            @Html.DropDownList("IdRolUsuario", new SelectList(roles, "IdRolUsuario", "Nombre"), "Seleccione un rol...", new { @class = "form-select", id = "IdRolUsuario" })
                            @Html.ValidationMessage("IdRolUsuario", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label for="Clave" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Clave): <span class="text-danger">*</span></label>
                            @Html.Password("Clave", null, new { @class = "form-control", id = "Clave" })
                            @Html.ValidationMessage("Clave", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                    <div class="row mb-3" id="doctorFields" style="display:none;">
                        <div class="col-md-6">
                            <label for="Genero" class="form-label">Género <span class="text-danger">*</span></label>
                            <select name="Genero" id="Genero" class="form-select">
                                <option value="">Seleccione género...</option>
                                <option value="M">Masculino</option>
                                <option value="F">Femenino</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="IdEspecialidad" class="form-label">Especialidad <span class="text-danger">*</span></label>
                            <select name="IdEspecialidad" id="IdEspecialidad" class="form-select">
                                <option value="">Seleccione especialidad...</option>
                                @foreach (var esp in especialidades)
                                {
                                    <option value="@esp.IdEspecialidad">@esp.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Editar Usuario -->
<div class="modal fade" id="editarUsuarioModal" tabindex="-1" aria-labelledby="editarUsuarioLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm("Edit", "Usuario", FormMethod.Post, new { id = "formEditarUsuario", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("IdUsuario", null, new { id = "edit_IdUsuario" })
                <div class="modal-header">
                    <h5 class="modal-title" id="editarUsuarioLabel">Editar Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().NumeroDocumentoIdentidad): <span class="text-danger">*</span></label>
                            @Html.TextBox("NumeroDocumentoIdentidad", null, new { @class = "form-control", id = "edit_NumeroDocumentoIdentidad", @readonly = "readonly" })
                            @Html.ValidationMessage("NumeroDocumentoIdentidad", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Nombre): <span class="text-danger">*</span></label>
                            @Html.TextBox("Nombre", null, new { @class = "form-control", id = "edit_Nombre" })
                            @Html.ValidationMessage("Nombre", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Apellido): <span class="text-danger">*</span></label>
                            @Html.TextBox("Apellido", null, new { @class = "form-control", id = "edit_Apellido" })
                            @Html.ValidationMessage("Apellido", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Correo): <span class="text-danger">*</span></label>
                            @Html.TextBox("Correo", null, new { @class = "form-control", type = "email", id = "edit_Correo" })
                            @Html.ValidationMessage("Correo", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().IdRolUsuario): <span class="text-danger">*</span></label>
                            @Html.DropDownList("IdRolUsuario", new SelectList(roles, "IdRolUsuario", "Nombre"), "Seleccione un rol...", new { @class = "form-select", id = "edit_IdRolUsuario" })
                            @Html.ValidationMessage("IdRolUsuario", "", new { @class = "text-danger small" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Clave) (opcional):</label>
                            @Html.Password("Clave", null, new { @class = "form-control", id = "edit_Clave", placeholder = "Dejar en blanco para conservar" })
                            @Html.ValidationMessage("Clave", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar cambios</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Detalle Usuario -->
<div class="modal fade" id="detalleUsuarioModal" tabindex="-1" aria-labelledby="detalleUsuarioLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalleUsuarioLabel">Detalle de Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Nro Documento:</label>
                        <input type="text" class="form-control" id="view_NumeroDocumentoIdentidad" readonly />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Nombres:</label>
                        <input type="text" class="form-control" id="view_Nombre" readonly />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Apellidos:</label>
                        <input type="text" class="form-control" id="view_Apellido" readonly />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Correo:</label>
                        <input type="text" class="form-control" id="view_Correo" readonly />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Rol:</label>
                        <input type="text" class="form-control" id="view_Rol" readonly />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Fecha creación:</label>
                        <input type="text" class="form-control" id="view_FechaCreacion" readonly />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Confirmar Eliminación -->
<div class="modal fade" id="eliminarUsuarioModal" tabindex="-1" aria-labelledby="eliminarUsuarioLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form action="/Usuario/Delete" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="del_IdUsuario" />
                <div class="modal-header">
                    <h5 class="modal-title" id="eliminarUsuarioLabel">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro que desea eliminar al usuario <strong id="del_Nombre"></strong>?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            var dt = $('#usuariosTable').DataTable({
                pageLength: 10,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, 'Todos']],
                order: [],
                language: { url: 'https://cdn.datatables.net/plug-ins/1.13.8/i18n/es-ES.json' },
                searching: false // Desactiva la barra de búsqueda
            });

            // Filtro por Nro Documento
            $('#filtroDocumento').on('keyup change', function () {
                dt.column(0).search(this.value).draw();
            });

            function showModal(id) {
                var el = document.getElementById(id);
                var modal = bootstrap.Modal.getOrCreateInstance(el, { backdrop: 'static', keyboard: false });
                modal.show();
            }

            function hideModal(id) {
                var el = document.getElementById(id);
                var modal = bootstrap.Modal.getInstance(el);
                if (modal) {
                    modal.hide();
                }
            }

            function updateValidationMessages(form, errors) {
                // Limpiar errores previos
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid');
                
                if (errors && Object.keys(errors).length > 0) {
                    var summaryList = form.find('.validation-summary-valid ul, .validation-summary-errors ul');
                    summaryList.empty();
                    
                    $.each(errors, function (fieldName, messages) {
                        // Agregar error al campo específico
                        var fieldValidation = form.find('[data-valmsg-for="' + fieldName + '"]');
                        if (fieldValidation.length > 0 && messages.length > 0) {
                            fieldValidation.removeClass('field-validation-valid').addClass('field-validation-error').text(messages[0]);
                        }
                        
                        // Agregar al resumen
                        if (messages.length > 0) {
                            summaryList.append('<li>' + messages[0] + '</li>');
                        }
                    });
                    
                    // Mostrar el resumen
                    form.find('.validation-summary-valid').removeClass('validation-summary-valid').addClass('validation-summary-errors');
                }
            }

            // Form Crear Usuario con AJAX
            $('#formCrearUsuario').on('submit', function (e) {
                e.preventDefault();
                
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Guardando...');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cerrar modal
                            var modal = bootstrap.Modal.getInstance(document.getElementById('usuarioModal'));
                            if (modal) {
                                modal.hide();
                            }
                            // Mostrar mensaje de éxito
                            $('<div class="alert alert-success text-center" role="alert">' + response.message + '</div>')
                                .insertAfter('.card-header')
                                .delay(3000)
                                .fadeOut('slow');
                            // Recargar página para actualizar la tabla
                            setTimeout(function() {
                                location.reload();
                            }, 500);
                        } else if (response.errors) {
                            updateValidationMessages(form, response.errors);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                            updateValidationMessages(form, xhr.responseJSON.errors);
                        } else {
                            alert('Error al crear el usuario. Por favor intente nuevamente.');
                        }
                    },
                    complete: function () {
                        submitBtn.prop('disabled', false).text('Guardar');
                    }
                });
            });

            // Form Editar Usuario con AJAX
            $('#formEditarUsuario').on('submit', function (e) {
                e.preventDefault();
                
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Guardando...');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cerrar modal
                            var modal = bootstrap.Modal.getInstance(document.getElementById('editarUsuarioModal'));
                            if (modal) {
                                modal.hide();
                            }
                            // Mostrar mensaje de éxito
                            $('<div class="alert alert-success text-center" role="alert">' + response.message + '</div>')
                                .insertAfter('.card-header')
                                .delay(3000)
                                .fadeOut('slow');
                            // Recargar página para actualizar la tabla
                            setTimeout(function() {
                                location.reload();
                            }, 500);
                        } else if (response.errors) {
                            updateValidationMessages(form, response.errors);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                            updateValidationMessages(form, xhr.responseJSON.errors);
                        } else {
                            alert('Error al editar el usuario. Por favor intente nuevamente.');
                        }
                    },
                    complete: function () {
                        submitBtn.prop('disabled', false).text('Guardar cambios');
                    }
                });
            });

            // Limpiar errores y validaciones al abrir modal de crear
            $('#usuarioModal').on('show.bs.modal', function () {
                var form = $('#formCrearUsuario');
                form[0].reset();
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid').find('ul').empty();
            });

            // Limpiar errores al abrir modal de editar
            $('#editarUsuarioModal').on('show.bs.modal', function () {
                var form = $('#formEditarUsuario');
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid').find('ul').empty();
            });

            // Delegar eventos por DataTables
            $('#usuariosTable').on('click', '.btn-editar', function () {
                var btn = $(this);
                $('#edit_IdUsuario').val(btn.data('id'));
                $('#edit_NumeroDocumentoIdentidad').val(btn.data('doc'));
                $('#edit_Nombre').val(btn.data('nombre'));
                $('#edit_Apellido').val(btn.data('apellido'));
                $('#edit_Correo').val(btn.data('correo'));
                $('#edit_IdRolUsuario').val(btn.data('rol'));
                $('#edit_Clave').val('');
                var rolText = $('#edit_IdRolUsuario option:selected').text().toLowerCase();
                if (rolText === 'doctor') {
                    $.getJSON('/Usuario/GetDoctorByDocumento', { documento: btn.data('doc') }, function (doctor) {
                        if (doctor) {
                            $('#edit_Genero').val(doctor.Genero);
                            $('#edit_IdEspecialidad').val(doctor.IdEspecialidad);
                        } else {
                            $('#edit_Genero').val('');
                            $('#edit_IdEspecialidad').val('');
                        }
                        showModal('editarUsuarioModal');
                    });
                } else {
                    $('#edit_Genero').val('');
                    $('#edit_IdEspecialidad').val('');
                    showModal('editarUsuarioModal');
                }
            });

            $('#usuariosTable').on('click', '.btn-ver', function () {
                var btn = $(this);
                $('#view_NumeroDocumentoIdentidad').val(btn.data('doc'));
                $('#view_Nombre').val(btn.data('nombre'));
                $('#view_Apellido').val(btn.data('apellido'));
                $('#view_Correo').val(btn.data('correo'));
                var rolId = btn.data('rol');
                var rolTexto = $('#edit_IdRolUsuario option[value="' + rolId + '"]').text();
                $('#view_Rol').val(rolTexto || '');
                var fecha = btn.closest('tr').find('td').eq(4).text();
                $('#view_FechaCreacion').val(fecha);
                showModal('detalleUsuarioModal');
            });

            $('#usuariosTable').on('click', '.btn-eliminar', function () {
                var btn = $(this);
                $('#del_IdUsuario').val(btn.data('id'));
                $('#del_Nombre').text(btn.data('nombre') + ' ' + (btn.data('apellido') || ''));
                showModal('eliminarUsuarioModal');
            });

            // Mostrar/ocultar campos de doctor según rol seleccionado
            $('#IdRolUsuario').on('change', function () {
                var rolText = $('#IdRolUsuario option:selected').text().toLowerCase();
                if (rolText === 'doctor') {
                    $('#doctorFields').show();
                } else {
                    $('#doctorFields').hide();
                }
            });
            $('#edit_IdRolUsuario').on('change', function () {
                var rolText = $('#edit_IdRolUsuario option:selected').text().toLowerCase();
                if (rolText === 'doctor') {
                    $('#editDoctorFields').show();
                } else {
                    $('#editDoctorFields').hide();
                }
            });
            // Inicializar visibilidad al abrir modal
            $('#usuarioModal').on('shown.bs.modal', function () {
                $('#IdRolUsuario').trigger('change');
            });
            $('#editarUsuarioModal').on('shown.bs.modal', function () {
                $('#edit_IdRolUsuario').trigger('change');
            });
        });
    </script>
}
