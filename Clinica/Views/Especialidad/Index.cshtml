@model List<Clinica.Models.Especialidad>
@{
    ViewBag.Title = "Especialidades";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var filtroNombre = ViewBag.FiltroNombre as string;
}

<div class="container-fluid mt-4">
    <h2>Especialidades</h2>
    <div class="card mt-3">
        <div class="card-header">
            <i class="fa fa-list"></i> Lista de Especialidades
        </div>
        <div class="card-body">
            <!-- Botón para abrir modal Crear -->
            <button class="btn btn-outline-success mb-3" data-bs-toggle="modal" data-bs-target="#especialidadModal">
                Nueva Especialidad
            </button>
            <!-- Filtro por Nombre -->
            <div class="row mb-2">
                <div class="col-md-6">
                    @using (Html.BeginForm("Index", "Especialidad", FormMethod.Get, new { @class = "d-flex" }))
                    {
                        <input type="text" name="filtroNombre" class="form-control me-2" placeholder="Filtrar por Nombre..." value="@filtroNombre" />
                        <button type="submit" class="btn btn-primary">Buscar</button>
                        <a href="@Url.Action("Index", "Especialidad")" class="btn btn-outline-secondary ms-2">Limpiar</a>

                    }

                </div>
            </div>
            <!-- Mensajes de error y éxito -->
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger text-center">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success text-center">@TempData["Success"]</div>
            }
            <table id="especialidadesTable" class="table table-bordered table-hover align-middle">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Fecha Creación</th>
                        <th>Acción</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var especialidad in Model)
                    {
                        <tr>
                            <td>@especialidad.Nombre</td>
                            <td>@(especialidad.FechaCreacion.HasValue ? especialidad.FechaCreacion.Value.ToString("dd/MM/yyyy") : "")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button"
                                            class="btn btn-info btn-sm btn-ver"
                                            data-id="@especialidad.IdEspecialidad"
                                            data-nombre="@especialidad.Nombre"
                                            data-fecha="@(especialidad.FechaCreacion.HasValue ? especialidad.FechaCreacion.Value.ToString("dd/MM/yyyy") : "")"
                                            title="Ver especialidad">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button type="button"
                                            class="btn btn-warning btn-sm btn-editar"
                                            data-id="@especialidad.IdEspecialidad"
                                            data-nombre="@especialidad.Nombre"
                                            title="Editar especialidad">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                    <button type="button"
                                            class="btn btn-danger btn-sm btn-eliminar"
                                            data-id="@especialidad.IdEspecialidad"
                                            data-nombre="@especialidad.Nombre"
                                            title="Eliminar especialidad">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal Crear Especialidad -->
<div class="modal fade" id="especialidadModal" tabindex="-1" aria-labelledby="especialidadModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm("Create", "Especialidad", FormMethod.Post, new { id = "formCrearEspecialidad", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="especialidadModalLabel">Nueva Especialidad</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    
                    <div class="mb-3">
                        <label for="Nombre" class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Nombre): <span class="text-danger">*</span></label>
                        @Html.TextBox("Nombre", null, new { @class = "form-control", id = "Nombre" })
                        @Html.ValidationMessage("Nombre", "", new { @class = "text-danger small" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Editar Especialidad -->
<div class="modal fade" id="editarEspecialidadModal" tabindex="-1" aria-labelledby="editarEspecialidadLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm("Edit", "Especialidad", FormMethod.Post, new { id = "formEditarEspecialidad", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("IdEspecialidad", null, new { id = "edit_IdEspecialidad" })
                <div class="modal-header">
                    <h5 class="modal-title" id="editarEspecialidadLabel">Editar Especialidad</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                    
                    <div class="mb-3">
                        <label class="form-label">@Html.DisplayNameFor(m => m.FirstOrDefault().Nombre): <span class="text-danger">*</span></label>
                        @Html.TextBox("Nombre", null, new { @class = "form-control", id = "edit_Nombre" })
                        @Html.ValidationMessage("Nombre", "", new { @class = "text-danger small" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar cambios</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Detalle Especialidad -->
<div class="modal fade" id="detalleEspecialidadModal" tabindex="-1" aria-labelledby="detalleEspecialidadLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalleEspecialidadLabel">Detalle de Especialidad</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Nombre:</label>
                    <input type="text" class="form-control" id="view_Nombre" readonly />
                </div>
                <div class="mb-3">
                    <label class="form-label">Fecha creación:</label>
                    <input type="text" class="form-control" id="view_FechaCreacion" readonly />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Confirmar Eliminación -->
<div class="modal fade" id="eliminarEspecialidadModal" tabindex="-1" aria-labelledby="eliminarEspecialidadLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form action="/Especialidad/Delete" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="del_IdEspecialidad" />
                <div class="modal-header">
                    <h5 class="modal-title" id="eliminarEspecialidadLabel">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro que desea eliminar la especialidad <strong id="del_Nombre"></strong>?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            var dt = $('#especialidadesTable').DataTable({
                pageLength: 10,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, 'Todos']],
                order: [],
                language: { url: 'https://cdn.datatables.net/plug-ins/1.13.8/i18n/es-ES.json' },
                searching: false 

            });

            function showModal(id) {
                var el = document.getElementById(id);
                var modal = bootstrap.Modal.getOrCreateInstance(el, { backdrop: 'static', keyboard: false });
                modal.show();
            }

            function hideModal(id) {
                var el = document.getElementById(id);
                var modal = bootstrap.Modal.getInstance(el);
                if (modal) {
                    modal.hide();
                }
            }

            function updateValidationMessages(form, errors) {
                // Limpiar errores previos
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid');
                
                if (errors && Object.keys(errors).length > 0) {
                    var summaryList = form.find('.validation-summary-valid ul, .validation-summary-errors ul');
                    summaryList.empty();
                    
                    $.each(errors, function (fieldName, messages) {
                        // Agregar error al campo específico
                        var fieldValidation = form.find('[data-valmsg-for="' + fieldName + '"]');
                        if (fieldValidation.length > 0 && messages.length > 0) {
                            fieldValidation.removeClass('field-validation-valid').addClass('field-validation-error').text(messages[0]);
                        }
                        
                        // Agregar al resumen
                        if (messages.length > 0) {
                            summaryList.append('<li>' + messages[0] + '</li>');
                        }
                    });
                    
                    // Mostrar el resumen
                    form.find('.validation-summary-valid').removeClass('validation-summary-valid').addClass('validation-summary-errors');
                }
            }

            // Form Crear Especialidad con AJAX
            $('#formCrearEspecialidad').on('submit', function (e) {
                e.preventDefault();
                
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Guardando...');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cerrar modal
                            var modal = bootstrap.Modal.getInstance(document.getElementById('especialidadModal'));
                            if (modal) {
                                modal.hide();
                            }
                            // Mostrar mensaje de éxito
                            $('<div class="alert alert-success text-center" role="alert">' + response.message + '</div>')
                                .insertAfter('.card-header')
                                .delay(3000)
                                .fadeOut('slow');
                            // Recargar página para actualizar la tabla
                            setTimeout(function() {
                                location.reload();
                            }, 500);
                        } else if (response.errors) {
                            updateValidationMessages(form, response.errors);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                            updateValidationMessages(form, xhr.responseJSON.errors);
                        } else {
                            alert('Error al crear la especialidad. Por favor intente nuevamente.');
                        }
                    },
                    complete: function () {
                        submitBtn.prop('disabled', false).text('Guardar');
                    }
                });
            });

            // Form Editar Especialidad con AJAX
            $('#formEditarEspecialidad').on('submit', function (e) {
                e.preventDefault();
                
                var form = $(this);
                var submitBtn = form.find('button[type="submit"]');
                submitBtn.prop('disabled', true).text('Guardando...');

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cerrar modal
                            var modal = bootstrap.Modal.getInstance(document.getElementById('editarEspecialidadModal'));
                            if (modal) {
                                modal.hide();
                            }
                            // Mostrar mensaje de éxito
                            $('<div class="alert alert-success text-center" role="alert">' + response.message + '</div>')
                                .insertAfter('.card-header')
                                .delay(3000)
                                .fadeOut('slow');
                            // Recargar página para actualizar la tabla
                            setTimeout(function() {
                                location.reload();
                            }, 500);
                        } else if (response.errors) {
                            updateValidationMessages(form, response.errors);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                            updateValidationMessages(form, xhr.responseJSON.errors);
                        } else {
                            alert('Error al editar la especialidad. Por favor intente nuevamente.');
                        }
                    },
                    complete: function () {
                        submitBtn.prop('disabled', false).text('Guardar cambios');
                    }
                });
            });

            // Limpiar errores y validaciones al abrir modal de crear
            $('#especialidadModal').on('show.bs.modal', function () {
                var form = $('#formCrearEspecialidad');
                form[0].reset();
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid').find('ul').empty();
            });

            // Limpiar errores al abrir modal de editar
            $('#editarEspecialidadModal').on('show.bs.modal', function () {
                var form = $('#formEditarEspecialidad');
                form.find('.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid').text('');
                form.find('.validation-summary-errors').removeClass('validation-summary-errors').addClass('validation-summary-valid').find('ul').empty();
            });

            $('#especialidadesTable').on('click', '.btn-editar', function () {
                var btn = $(this);
                $('#edit_IdEspecialidad').val(btn.data('id'));
                $('#edit_Nombre').val(btn.data('nombre'));
                showModal('editarEspecialidadModal');
            });

            $('#especialidadesTable').on('click', '.btn-ver', function () {
                var btn = $(this);
                $('#view_Nombre').val(btn.data('nombre'));
                $('#view_FechaCreacion').val(btn.data('fecha'));
                showModal('detalleEspecialidadModal');
            });

            $('#especialidadesTable').on('click', '.btn-eliminar', function () {
                var btn = $(this);
                $('#del_IdEspecialidad').val(btn.data('id'));
                $('#del_Nombre').text(btn.data('nombre'));
                showModal('eliminarEspecialidadModal');
            });
        });
    </script>
}